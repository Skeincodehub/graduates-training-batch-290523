---
- name: MTA project installation
  hosts: all
  become: yes
  gather_facts: yes
  vars_prompt:

    - name: "githubuser"
      prompt: "Enter your github username"
      private: yes
    - name: "githubpassword"
      prompt: "Enter your github password"
      private: yes
  tasks:
  
    # Update apt latest version
    - name: apt update
      apt:
        name: "*"
        state: latest
        
    # update cache in module apt
    - name: Update cache 
      ansible.builtin.apt:
        update_cache: yes
        
    # Import key for nodesource installation
    - name: Import GPG key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
        
    # Adding nodesource repo for node installation
    - name: Add NodeSource repository
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_17.x focal main"
        state: present
        update_cache: yes
        
    # Insall node.js
    - name: Install Node.js and npm
      apt:
        name: nodejs
        state: latest
        
    # Install npm 8.5.5 version globally
    - name: Install npm 8.5.5 globally
      npm:
        name: npm
        global: yes
        version: 8.5.5

    # check the nodejs version
    - name: Verify Node.js installation
      command: node --version
      register: node_version

    # Check the Node.js version
    - name: Display Node.js version
      debug:
        var: node_version.stdout

    # check the npm version
    - name: Verify Node.js installation
      command: npm --version
      register: npm_version

    # Show npm version
    - name: Display npm version
      debug:
        var: npm_version.stdout

    # Install Nginx latest ubuntu 1.8
    - name: Install Ngnix
      apt:
        name: nginx
        state: latest

    # Install Angular CLI with Version 12.2.1
    - name: Install or Upgrade Angular CLI
      command: npm install -g @angular/cli@12.2.1
      args:
        executable: /bin/bash

    # Check the required version for angular
    - name: check nginx version
      command: ng version
      register: Angular_version
      changed_when: false

    # Show version for angular
    - debug:
        var: Angular_version.stdout

    # Install list of Packages for requirements
    - name: Install require pkg
      apt:
        pkg: "{{ item }}"
        state: latest
      with_items:
        - curl
        - git
        - mysql-server

    # Install npm forever global
    - name: Install forever
      npm:
        name: forever
        global: yes
        state: present
        
    # Clone mta-admin repo from Github
    - name: Clone mta-admin repo
      expect:
        command: git clone https://github.com/Skein-Technologies-pvt-ltd/mta-admin.git
        responses:
          Username: "{{ githubuser }}"
          Password: "{{ githubpassword }}"

    # Clone mta-api repo from Github
    - name: Clone mta-api repo
      expect:
        command: git clone https://github.com/Skein-Technologies-pvt-ltd/mta-api.git
        responses:
          Username: "{{ githubuser }}"
          Password: "{{ githubpassword }}"
          
    # Move repo from ubuntu to root path 
    - name: move the cloned mta-admin repo
      command: mv /home/ubuntu/mta-admin /var/www/html
      
    # Move repo from ubuntu to root path
    - name: move the cloned mta-api repo
      command: mv /home/ubuntu/mta-api /var/www/html
      
    # Remove the file default from a path /etc/nginx/sites-enabled/default
    - name: Remove file default in nginx path
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    # Copy the file default from master to control node
    - name: copy the default file
      copy:
        src: /etc/ansible/default
        dest: /etc/nginx/sites-available/default

    # Use symbolic line module to link a file default 
    - name: symbolic link a file Default
      ansible.builtin.shell: ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default

    # Restart nginx 
    #- name: Restart Nginx
    # service:
    #   name: nginx
    #   state: restarted

